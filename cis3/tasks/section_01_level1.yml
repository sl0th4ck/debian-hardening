---

  - name: 1.1.1.1 Ensure mounting of cramfs filesystems is disabled (Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install cramfs /bin/true'
      state: present
      create: yes
    tags:
      - section1
      - section1.1
      - section1.1.1.1
      - lvl.1.server
      - lvl.1.workstation

  - name: 1.1.1.2 Ensure mounting of freevxfs filesystems is disabled (Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install freevxfs /bin/true'
      state: present
      create: yes
    tags:
      - section1
      - section1.1
      - section1.1.1.2
      - lvl.1.server
      - lvl.1.workstation

  - name: 1.1.1.3 Ensure mounting of jffs2 filesystems is disabled (Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install jffs2 /bin/true'
      state: present
      create: yes
    tags:
      - section1
      - section1.1
      - section1.1.1.3
      - lvl.1.server
      - lvl.1.workstation      

  - name: 1.1.1.4 Ensure mounting of hfs filesystems is disabled (Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install hfs /bin/true'
      state: present
      create: yes
    tags:
      - section1
      - section1.1
      - section1.1.1.4
      - lvl.1.server
      - lvl.1.workstation

  - name: 1.1.1.5 Ensure mounting of hfsplus filesystems is disabled (Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install hfsplus /bin/true'
      state: present
      create: yes
    tags:
      - section1
      - section1.1
      - section1.1.1.5

  - name: 1.1.1.6 Ensure mounting of squashfs filesystems is disabled (Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install squashfs /bin/true'
      state: present
      create: yes
    tags:
      - section1
      - section1.1
      - section1.1.1.6
      - lvl.1.server
      - lvl.1.workstation

  - name: 1.1.1.7 Ensure mounting of udf filesystems is disabled (Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install udf /bin/true'
      state: present
      create: yes
    tags:
      - section1
      - section1.1
      - section1.1.1.7
      - lvl.1.server
      - lvl.1.workstation

  - name: 1.1.1.8 Ensure mounting of FAT filesystems is disabled (Scored)
    lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      line: 'install vfat /bin/true'
      state: present
      create: yes
    tags:
      - section1
      - section1.1
      - section1.1.1.8
      - lvl.1.server
      - lvl.2.workstation

  # Commented out all the partition tasks since we aren't going to use them.

  # - name: 1.1.2 Ensure separate partition exists for /tmp (Scored)
  #   command: grep '\s/tmp\s' /etc/fstab
  #   register: tmp_partition
  #   failed_when: tmp_partition.rc == 1
  #   changed_when: False
  #   ignore_errors: True
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.2
  #     - lvl.2.server
  #     - lvl.2.workstation

  # - apt:
  #     name: python-pip
  #     state: present
  #   when: tmp_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.3
  #     - lvl.1.server
  #     - lvl.1.workstation

  # - name: install dependencies for mountopts-module
  #   pip:
  #     name: fstab
  #   when: tmp_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.3
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - mountopts:
  #     name: /tmp
  #     option: nodev
  #     state: present
  #   when: tmp_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.3
  #     - lvl.1.server
  #     - lvl.1.workstation

  # - shell: mount | grep /tmp|grep nodev
  #   register: mount_tmp_output
  #   failed_when: False
  #   ignore_errors: True
  #   tags: 
  #     - section1 
  #     - section1.1
  #     - section1.1.3
  #     - lvl.1.server
  #     - lvl.1.workstation

  # - name: 1.1.3 Ensure nodev option set on /tmp partition (Scored)
  #   command: mount -o remount,nodev /tmp
  #   ignore_errors: True
  #   when: tmp_partition.rc == 0 and mount_tmp_output.rc != 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.3
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - apt:
  #     name: python-pip
  #     state: present
  #   when: tmp_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.4
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - name: install dependencies for mountopts-module
  #   pip:
  #     name: fstab
  #   when: tmp_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.4
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - mountopts:
  #     name: /tmp
  #     option: nosuid
  #     state: present
  #   when: tmp_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.4
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - shell: mount | grep /tmp|grep nosuid
  #   register: mount_tmp_output
  #   failed_when: false
  #   ignore_errors: True
  #   changed_when: False
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.4
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - name: 1.1.4 Ensure nosuid option set on /tmp partition (Scored)
  #   command: mount -o remount,nosuid /tmp
  #   ignore_errors: True
  #   when: tmp_partition.rc == 0 and mount_tmp_output.rc != 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.4
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - name: 1.1.5 Ensure separate partition exists for /var (Scored)
  #   command: grep '\s/var\s' /etc/fstab
  #   register: var_partition
  #   failed_when: var_partition.rc == 1
  #   changed_when: False
  #   ignore_errors: True
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.5
  #     - lvl.2.server
  #     - lvl.2.workstation
      
  # - apt:
  #     name: python-pip
  #     state: present
  #   when: var_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.
  #     - lvl.2.server
  #     - lvl.2.workstation
      
  # - name: install dependencies for mountopts-module
  #   pip:
  #     name: fstab
  #   when: var_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.5
  #     - lvl.2.server
  #     - lvl.2.workstation
      
  # - mountopts:
  #     name: /var
  #     option: nosuid
  #     state: present
  #   when: var_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.5
  #     - lvl.2.server
  #     - lvl.2.workstation
      
  # - mountopts:
  #     name: /var
  #     option: noexec
  #     state: present
  #   when: var_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.5
  #     - lvl.2.server
  #     - lvl.2.workstation
      
  # - mountopts:
  #     name: /var
  #     option: nodev
  #     state: present
  #   when: var_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.5
  #     - lvl.2.server
  #     - lvl.2.workstation
      
  # - name: 1.1.6 Ensure separate partition exists for /var/tmp (Scored)
  #   command: grep '\s/var/tmp\s' /etc/fstab
  #   register: var_tmp_partition
  #   failed_when: var_tmp_partition.rc == 1
  #   changed_when: False
  #   ignore_errors: True
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.6
  #     - lvl.2.server
  #     - lvl.2.workstation
      
  # - apt:
  #     name: python-pip
  #     state: present
  #   when: var_tmp_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.7
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - name: install dependencies for mountopts-module
  #   pip:
  #     name: fstab
  #   when: var_tmp_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.7
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - mountopts:
  #     name: /var/tmp
  #     option: nodev
  #     state: present
  #   when: var_tmp_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.7
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - shell: mount | grep /var/tmp|grep nodev
  #   register: mount_var_tmp_output
  #   failed_when: false
  #   ignore_errors: True
  #   changed_when: False
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.7
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - name: 1.1.7 Ensure nodev option set on /var/tmp partition (Scored)
  #   command: mount -o remount,nodev /var/tmp
  #   ignore_errors: True
  #   when: var_tmp_partition.rc == 0 and mount_var_tmp_output.rc != 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.7
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - apt:
  #     name: python-pip
  #     state: present
  #   when: var_tmp_partition.rc == 0
  #   tags:
  #     - section1 
  #     - section1.1
  #     - section1.1.8
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - name: install dependencies for mountopts-module
  #   pip:
  #     name: fstab
  #   when: var_tmp_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.8
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - mountopts:
  #     name: /var/tmp
  #     option: nosuid
  #     state: present
  #   when: var_tmp_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.8
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - shell: mount | grep /var/tmp|grep nosuid
  #   register: mount_var_tmp_output
  #   failed_when: false
  #   ignore_errors: True
  #   changed_when: False
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.8
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - name: 1.1.8 Ensure nosuid option set on /var/tmp partition (Scored)
  #   command: mount -o remount,nosuid /var/tmp
  #   ignore_errors: True
  #   when: var_tmp_partition.rc == 0 and mount_var_tmp_output.rc != 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.8
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - apt:
  #     name: python-pip
  #     state: present
  #   when: var_tmp_partition.rc == 0
  #   tags:
  #     - section1 
  #     - section1.1
  #     - section1.1.9
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - name: install dependencies for mountopts-module
  #   pip:
  #     name: fstab
  #   when: var_tmp_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.9
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - mountopts:
  #     name: /var/tmp
  #     option: noexec
  #     state: present
  #   when: var_tmp_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.9
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - shell: mount | grep /var/tmp|grep noexec
  #   register: mount_var_tmp_output
  #   failed_when: false
  #   ignore_errors: True
  #   changed_when: False
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.9
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - name: 1.1.9 Ensure noexec option set on /var/tmp partition (Scored)
  #   command: mount -o remount,noexec /var/tmp
  #   ignore_errors: True
  #   when: var_tmp_partition.rc == 0 and mount_var_tmp_output.rc != 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.9
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - name: 1.1.10 Ensure separate partition exists for /var/log (Scored)
  #   command: grep '\s/var/log\s' /etc/fstab
  #   register: var_log_partition
  #   failed_when: var_log_partition.rc == 1
  #   changed_when: False
  #   ignore_errors: True
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.10
  #     - lvl.2.server
  #     - lvl.2.workstation
      
  # - apt:
  #     name: python-pip
  #     state: present
  #   when: var_log_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.10
  #     - lvl.2.server
  #     - lvl.2.workstation
      
  # - name: install dependencies for mountopts-module
  #   pip:
  #     name: fstab
  #   when: var_log_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.10
  #     - lvl.2.server
  #     - lvl.2.workstation
      
  # - mountopts:
  #     name: /var/log
  #     option: noexec
  #     state: present
  #   when: var_log_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.10
  #     - lvl.2.server
  #     - lvl.2.workstation
      
  # - mountopts:
  #     name: /var/log
  #     option: nodev
  #     state: present
  #   when: var_log_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.10
  #     - lvl.2.server
  #     - lvl.2.workstation
      
  # - mountopts:
  #     name: /var/log
  #     option: nosuid
  #     state: present
  #   when: var_log_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.10
  #     - lvl.2.server
  #     - lvl.2.workstation
      
  # - name: 1.1.11 Ensure separate partition exists for /var/log/audit (Scored)
  #   command: grep '\s/var/log/audit\s' /etc/fstab
  #   register: var_log_audit_partition
  #   failed_when: var_log_audit_partition.rc == 1
  #   changed_when: False
  #   ignore_errors: True
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.11
  #     - lvl.2.server
  #     - lvl.2.workstation
      
  # - apt:
  #     name: python-pip
  #     state: present
  #   when: var_log_audit_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.11
  #     - lvl.2.server
  #     - lvl.2.workstation
      
  # - name: install dependencies for mountopts-module
  #   pip:
  #     name: fstab
  #   when: var_log_audit_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.11
  #     - lvl.2.server
  #     - lvl.2.workstation
      
  # - mountopts:
  #     name: /var/log/audit
  #     option: noexec
  #     state: present
  #   when: var_log_audit_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.11
  #     - lvl.2.server
  #     - lvl.2.workstation
      
  # - mountopts:
  #     name: /var/log/audit
  #     option: nodev
  #     state: present
  #   when: var_log_audit_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.11
  #     - lvl.2.server
  #     - lvl.2.workstation
      
  # - mountopts:
  #     name: /var/log/audit
  #     option: nosuid
  #     state: present
  #   when: var_log_audit_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.11
  #     - lvl.2.server
  #     - lvl.2.workstation
      
  # - name: 1.1.12 Ensure separate partition exists for /home (Scored)
  #   command: grep '\s/home\s' /etc/fstab
  #   register: home_partition
  #   failed_when: home_partition.rc == 1
  #   changed_when: False
  #   ignore_errors: True
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.12
  #     - lvl.2.server
  #     - lvl.2.workstation
      
  # - apt:
  #     name: python-pip
  #     state: present
  #   when: home_partition.rc == 0
  #   tags:
  #     - section1 
  #     - section1.1
  #     - section1.1.13
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - name: install dependencies for mountopts-module
  #   pip:
  #     name: fstab
  #   when: home_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.13
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - mountopts:
  #     name: /home
  #     option: nodev
  #     state: present
  #   when: home_partition.rc == 0
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.13
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - shell: mount | grep /home|grep nodev
  #   register: mount_home_output
  #   failed_when: false
  #   ignore_errors: True
  #   changed_when: False
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.13
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - name: 1.1.13 Ensure nodev option set on /home partition (Scored)
  #   command: mount -o remount,nodev /home
  #   ignore_errors: True
  #   when: home_partition.rc == 0 and mount_home_output.rc == 1
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.13
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - shell: mount | grep /dev/shm|grep nodev
  #   register: mount_dev_shm_output
  #   failed_when: false
  #   ignore_errors: True
  #   changed_when: False
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.14
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - name: 1.1.14 Ensure nodev option set on /dev/shm partition (Scored)
  #   command: mount -o remount,nodev /home
  #   ignore_errors: True
  #   when: mount_dev_shm_output.rc == 1
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.14
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - shell: mount | grep /dev/shm|grep nosuid
  #   register: mount_dev_shm_output
  #   failed_when: false
  #   ignore_errors: True
  #   changed_when: False
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.15

  # - name: 1.1.15 Ensure nosuid option set on /dev/shm partition (Scored)
  #   command: mount -o remount,nosuid /dev/shm
  #   ignore_errors: True
  #   when: mount_dev_shm_output.rc == 1
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.15
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - shell: mount | grep /dev/shm|grep noexec
  #   register: mount_dev_shm_output
  #   failed_when: false
  #   ignore_errors: True
  #   changed_when: False
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.16
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  # - name: 1.1.16 Ensure noexec option set on /dev/shm partition (Scored)
  #   command: mount -o remount,noexec /dev/shm
  #   ignore_errors: True
  #   when: mount_dev_shm_output.rc == 1
  #   tags:
  #     - section1
  #     - section1.1
  #     - section1.1.16
  #     - lvl.1.server
  #     - lvl.1.workstation
      
  - name: 1.1.17 Ensure nodev option set on removable media partitions (Not Scored)
    debug:
      msg: "/!\ Ensure removable partitions have nodev option"
    tags:
      - section1
      - section1.1
      - section1.1.17
      - lvl.1.server
      - lvl.1.workstation
      - not.scored
      
  - name: 1.1.18 Ensure nosuid option set on removable media partitions (Not Scored)
    debug:
      msg: "/!\ Ensure removable partitions have nosuid option"
    tags:
      - section1
      - section1.1
      - section1.1.18
      - lvl.1.server
      - lvl.1.workstation
      - not.scored
            
  - name: 1.1.19 Ensure noexec option set on removable media partitions (Not Scored)
    debug:
      msg: "/!\ Ensure removable partitions have noexec option"
    tags:
      - section1
      - section1.1
      - section1.1.19
      - lvl.1.server
      - lvl.1.workstation
      - not.scored
      
  - shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d -perm -0002 -print 2>/dev/null
    failed_when: False
    changed_when: False
    check_mode: no
    register: sticky_bit_dirs
    tags:
      - section1
      - section1.1
      - section1.1.20
      - lvl.1.server
      - lvl.1.workstation
      
  - name: 1.1.20 Ensure sticky bit is set on all world-writable directories (Scored)
    file:
        path: "{{ item }}"
        mode: "a+t"
    with_items: "{{sticky_bit_dirs.stdout_lines}}"
    tags:
      - section1
      - section1.1
      - section1.1.20
      - lvl.1.server
      - lvl.1.workstation
      
  - shell: dpkg -l|grep autofs
    register: dpkg_autofs
    failed_when: false
    ignore_errors: True
    changed_when: False
    tags:
      - section1
      - section1.1
      - section1.1.21Q
      - lvl.1.server
      - lvl.2.workstation
      
  - name: 1.1.21 Disable Automounting (Scored)
    systemd:
      name: autofs
      enabled: no
    when: dpkg_autofs.rc == 0
    tags:
      - section1
      - section1.1
      - section1.1.21
      - lvl.1.server
      - lvl.2.workstation
      